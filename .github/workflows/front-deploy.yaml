name: Frontend CI/CD

on:
  push:
    paths:
      - 'frontend/**'
    branches:
      - main

jobs:
  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    env:
      DATE_TAG: dev-${{ github.run_id }}-${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Frontend Docker Image
        working-directory: ./frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${DATE_TAG} -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${DATE_TAG}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        with:
          args: "✅ [FRONTEND] 이미지 푸시 완료: `${{ env.DATE_TAG }}`"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    
      - name: Deploy via Bastion Host
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DEV_HOST }}          # 내부 Dev 서버 (ex. 10.0.1.5)
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}        # 내부 Dev 서버용 키
          proxy_host: ${{ secrets.BASTION_HOST }}   # 외부에서 접속 가능한 Bastion IP
          proxy_username: ${{ secrets.EC2_USERNAME }}
          proxy_key: ${{ secrets.EC2_SSH_KEY }} # Bastion용 키
          script: |
            cd ~/test
            docker compose pull
            docker compose up -d

